1. Прикольно, но глянул на Youtube.
2. https://wifigid.ru/wp-content/uploads/2019/02/1-83.jpg
1 6 и 11 каналы не имееют точек соприкосновения при 20 MHz. При 40 MHz канал возможен только один, в диапозоне 2.4 GHz.
3. Apple
4. Как было сказано на лекции. MTU-заголовки TCP- заголовки IP. Итого получаем 8949.
5. Установка флагов SYN и FIN, в заголовке TCP, потому что в таком случает требуется установление соединения (через SYN)
и прекращение соединения (через FIN).
6. Ключ -u говорит, что используется протокол UDP, думаю, следовательно Time-wait не должен быть. 
Time-Wait – это ожидание подтверждения доставки о получении подверждения завершения сеанса, а UDP шлет только в одну сторону.
7. 
                    Client           Server 
                 ESTABLESHED      ESTABLESHED
1. >> FIN        FIN WAIT 1   >   CLOSE WAIT
2. << FIN-ACC    FIN WAIT 2   >   CLOSE WAIT 
3. >> ACK        TIME WAIT    <   LAST ACK
                 CLOSED       >   CLOSED
8. Максимальное число портов – 65535.
Максимальное число портов – 65535, 1 порт на каждого клиента и 65535 соединений,
следовательно 65535 клиентов и с 65535 на каждом для соединений.

9. Да, при частом соединении и отсоединении.
При частом соединении и отключении создается соединение и соотвествено выделяется один порт.
Пока предыдущая сессия еще не до конца завершена, а уже открыта новая. При большом кол-ве таких моментов, могут быть израсходованы все порты.
В реалиях не сталкивался, но возможно что, при большом обьеме разработок и необходимости портов, такое может вылиться в проблему.

10.UDP шлет пакеты в точку, не особо задумываясь о том дошел ли пакет или нет. 
Поэтому если приложение очень чувствительно к перегрузу UDP, то это может привести к тому, что канал рухнет и так далее.

11. Я бы использовал TCP, чтобы пакеты для логов 100% доходили. 
Не хорошо будет, если случится то, что канал рухнет и все потеряется.
SYSLOG поддерживает UDP (514 порт) и TCP (1468 порт).
Во-первых, проблема согласованности. Протокол Syslog не определяет стандартный способ форматирования содержимого сообщения - 
и существует столько же способов форматирования сообщения, сколько существует разработчиков. 
Некоторые сообщения могут быть удобочитаемыми, а некоторые нет. 
Syslog это не волнует - он просто предоставляет способ передачи сообщения.
Есть также некоторые проблемы, которые возникают из-за того, что syslog использует UDP в качестве транспорта - 
поэтому возможно потерять сообщения из-за перегрузки сети или потери пакетов.
Наконец, есть некоторые проблемы безопасности. В сообщениях syslog’а нет аутентификации, поэтому один компьютер может 
выдать себя за другой компьютер и отправить ложные события журнала. Он также подвержен повторным атакам.

12. root@vagrant:/home/vagrant# sudo ss state listening -t -p
Recv-Q              Send-Q                             Local Address:Port                               Peer Address:Port              Process
0                   4096                                   127.0.0.1:8125                                    0.0.0.0:*                  users:(("netdata",pid=854,fd=26))
0                   4096                                     0.0.0.0:19999                                   0.0.0.0:*                  users:(("netdata",pid=854,fd=4))
0                   4096                                     0.0.0.0:sunrpc                                  0.0.0.0:*                  users:(("rpcbind",pid=608,fd=4),("systemd",pid=1,fd=35))
0                   4096                               127.0.0.53%lo:domain                                  0.0.0.0:*                  users:(("systemd-resolve",pid=609,fd=13))
0                   128                                      0.0.0.0:ssh                                     0.0.0.0:*                  users:(("sshd",pid=878,fd=3))
0                   4096                                       [::1]:8125                                       [::]:*                  users:(("netdata",pid=854,fd=25))
0                   4096                                        [::]:sunrpc                                     [::]:*                  users:(("rpcbind",pid=608,fd=6),("systemd",pid=1,fd=37))
0                   128                                         [::]:ssh                                        [::]:*                  users:(("sshd",pid=878,fd=4))

13. 
Опция -А вывод в тексте ASCII
sudo tcpdump -A 

Опция –x вывод в HEX
sudo tcpdump -x 

Опция -XX вывод HEX и ASCII
sudo tcpdump -XX 

14. Flags: 0x40, Don't fragment
        0... .... = Reserved bit: Not set
        .1.. .... = Don't fragment: Set
        ..0. .... = More fragments: Not set

3 бита:
    0 - зарезервиравано, всегда 0,
    1 - указывает на фрагментирование , 0 - разрешена фрагментация, 1 - нет
    2 - указывает на конец фрагментированных пакетов , 1 - не последний фрагмент (актуально для 1го бита = 0)


Ehternet называется Ethernet II

OUI узел: Destination: PcsCompu_e3:90:c5 (08:00:27:e3:90:c5)
