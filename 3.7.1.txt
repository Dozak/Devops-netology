1. RWIN = RTT * Throughput = 300мс * 1Гбит/с = 0.3с * 1Гбит/с = 0.3Гбит = 0,0375Гб
Данные калькулятора:
TCP throughput calculator
Theoretical network limit
rough estimation: rate < (MSS/RTT)*(C/sqrt(Loss)) [ C=1 ] (based on the Mathis et.al. formula)
network limit (MSS 1460 byte, RTT: 80.0 ms, Loss: 10-08 (10-06%)) : 1460.00 Mbit/sec.
Bandwidth-delay Product and buffer size
BDP (1000 Mbit/sec, 300.0 ms) = 37.50 MByte
required tcp buffer to reach 1000 Mbps with RTT of 300.0 ms >= 36621.1 KByte
maximum throughput with a TCP window of 64 KByte and RTT of 300.0 ms <= 1.75 Mbit/sec.

2. В зависимости от задержек скорость падает от 25 до 6 раз по разным данным из Интернета
Падение скорости зависит как от потери пакетов, так и от задержек передачи, поэтому данные разнятся.

Доработка: Получается в 1000 раз!
rough estimation: rate < (MSS/RTT)*(C/sqrt(Loss)) [ C=1 ] (based on the Mathis et.al. formula)
network limit (MSS 1460 byte, RTT: 300.0 ms, Loss: 10-08 (10-06%)) : 389.33 Mbit/sec.

rough estimation: rate < (MSS/RTT)*(C/sqrt(Loss)) [ C=1 ] (based on the Mathis et.al. formula)
network limit (MSS 1460 byte, RTT: 300.0 ms, Loss: 1%) : 0.39 Mbit/sec.

В 

3. Ethernet header + IP header + TCP header + Ethernet trailer
Следовательно, 14+20+20+4=58.
             min    max
      общая  64     1518 
   полезная  6      1460
  служебная  58     58
 % полезной  9,37%  96,18% 

По соотношению процентов, проглядывается, как размер фрейма относится к целому размеру пакета.

4. 
1. Получение IP  
   1.1 поиск в локальном КЭШ соответсвия имени хоста по DNS
   1.2 Запрос на внешний DNS (DNS провайдера), если нет, рекурсивные запросы:
   1.3 Запрос на корневой DNS . -> редирект на ru.
   1.4 Запрос на ru -> редрект на netology
   1.5 запрос на netology -> возврат IP
2. Установка соединения к хосту по порту 80 (SYN) - вот тут начинается использоваться ARP запрос, узнавая какой MAC-адрес у шлюза.
3. Подтверждение соединения SYN, ACK - после чего помещается присланный MAC адрес в свою локальную ARP таблицу для добавления заголовков и хвоста, с указанием 2 шлюзов в source - свой MAC в destination MAC шлюза.  
4. Запрос URL у сервера ACK + HTTP запрос 
5. Возврат ответа заголовков ACK + HTTP HEAD
6. Подтверждение получения ACK
7. Запрос на закрытие соединения FIN
8. Подтверждение закрытия FIN
9. Подтверждение закрытия
 
5. 
1. Запрос к клиентскому DNS  -> редирект на корневой DNS сервер
2. корневой DNS              -> редирект на зону UK
3. DNS зоны uk               -> редирект на зону CO.UK
4. DNS зоны co.uk            -> редирект на google.co.uk
5. DNS зоны google.co.uk     -> вернет IP адрес, DNS в свою очередь вернет его клиенту.

6.
/25 маска – 126 адресов. 
255.248.0.0 – /13 маска, 524286 адресов. 248 = -3 бита, 2 октета - 16 бит, 16+3 = 19 бит, 2^19=524288, -2 зарезервированных служебных адреса.

7. /23 > на 1 бит => больше в двое (без учета занятости служебных адрестов 0 и 255)

8. Получится. 128 подсетей с маской /15
Маска /8 – 16777216 (включая 2 служебных)
16777216/128=131072
131072 – это маска /15 (131072 адресов включая служебные)